{"name":"memory-fs","version":"0.3.0","description":"A simple in-memory filesystem. Holds data in a javascript object.","main":"lib/MemoryFileSystem.js","directories":{"test":"test"},"scripts":{"test":"mocha","cover":"istanbul cover node_modules/mocha/bin/_mocha","travis":"npm run cover -- --report lcovonly"},"repository":{"type":"git","url":"git+https://github.com/webpack/memory-fs.git"},"keywords":["fs","memory"],"author":{"name":"Tobias Koppers @sokra"},"license":"MIT","bugs":{"url":"https://github.com/webpack/memory-fs/issues"},"homepage":"https://github.com/webpack/memory-fs","devDependencies":{"bl":"^1.0.0","codecov.io":"^0.1.4","coveralls":"^2.11.2","istanbul":"^0.2.13","mocha":"^1.20.1","should":"^4.0.4"},"dependencies":{"errno":"^0.1.3","readable-stream":"^2.0.1"},"readme":"# memory-fs\r\n\r\nA simple in-memory filesystem. Holds data in a javascript object.\r\n\r\n``` javascript\r\nvar MemoryFileSystem = require(\"memory-fs\");\r\nvar fs = new MemoryFileSystem(); // Optionally pass a javascript object\r\n\r\nfs.mkdirpSync(\"/a/test/dir\");\r\nfs.writeFileSync(\"/a/test/dir/file.txt\", \"Hello World\");\r\nfs.readFileSync(\"/a/test/dir/file.txt\"); // returns Buffer(\"Hello World\")\r\n\r\n// Async variantes too\r\nfs.unlink(\"/a/test/dir/file.txt\", function(err) {\r\n\t// ...\r\n});\r\n\r\nfs.readdirSync(\"/a/test\"); // returns [\"dir\"]\r\nfs.statSync(\"/a/test/dir\").isDirectory(); // returns true\r\nfs.rmdirSync(\"/a/test/dir\");\r\n\r\nfs.mkdirpSync(\"C:\\\\use\\\\windows\\\\style\\\\paths\");\r\n```\r\n\r\n## License\r\n\r\nCopyright (c) 2012-2014 Tobias Koppers\r\n\r\nMIT (http://www.opensource.org/licenses/mit-license.php)\r\n","readmeFilename":"README.md","_id":"memory-fs@0.3.0","_shasum":"7bcc6b629e3a43e871d7e29aca6ae8a7f15cbb20","_resolved":"https://registry.npmjs.org/memory-fs/-/memory-fs-0.3.0.tgz","_from":"https://registry.npmjs.org/memory-fs/-/memory-fs-0.3.0.tgz"}