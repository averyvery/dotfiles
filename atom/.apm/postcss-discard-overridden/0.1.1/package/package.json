{"name":"postcss-discard-overridden","version":"0.1.1","description":"PostCSS plugin to discard overridden @keyframes or @counter-style.","main":"dist/index.js","keywords":["postcss","css","postcss-plugin","at-rules","@keyframes","@counter-style"],"author":{"name":"Justineo","email":"justice360@gmail.com"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/justineo/postcss-discard-overridden.git"},"bugs":{"url":"https://github.com/Justineo/postcss-discard-overridden/issues"},"homepage":"https://github.com/Justineo/postcss-discard-overridden","dependencies":{"postcss":"^5.0.16"},"devDependencies":{"ava":"^0.14.0","babel-cli":"^6.7.7","babel-plugin-add-module-exports":"^0.1.4","babel-preset-es2015":"^6.6.0","babel-register":"^6.7.2","eslint":"^2.1.0","eslint-config-postcss":"^2.0.0"},"scripts":{"test":"ava && eslint *.js"},"eslintConfig":{"extends":"eslint-config-postcss/es5"},"ava":{"require":["babel-register"]},"readme":"# PostCSS Discard Overridden [![Build Status][ci-img]][ci]\n\n[PostCSS] plugin to discard overridden `@keyframes` or `@counter-style`.\n\n`@keyframes` or `@counter-style` will be overridden by those who share the same identifiers and appear later in stylesheets. So we can discard all of them except the last one. When defined inside a `@media` or `@supports` rule, `@keyframes` and `@counter-style` rules only override global rules in some of the client browsers so they need handled separately. This plugin has taken care of this and transforms the PostCss AST **safely**.\n\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://travis-ci.org/Justineo/postcss-discard-overridden.svg\n[ci]:      https://travis-ci.org/Justineo/postcss-discard-overridden\n\n```css\n@-webkit-keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0.8;\n  }\n}\n@keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0.8;\n  }\n}\n@media (max-width: 500px) {\n  @-webkit-keyframes fade-in {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  @keyframes fade-in {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  @-webkit-keyframes fade-in {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0.8;\n    }\n  }\n  @keyframes fade-in {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0.8;\n    }\n  }\n  @supports (display: flex) {\n    @-webkit-keyframes fade-in {\n      0% {\n        opacity: 0;\n      }\n      100% {\n        opacity: 1;\n      }\n    }\n    @keyframes fade-in {\n      0% {\n        opacity: 0;\n      }\n      100% {\n        opacity: 1;\n      }\n    }\n  }\n}\n@-webkit-keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n```\n\n```css\n@media (max-width: 500px) {\n  @-webkit-keyframes fade-in {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0.8;\n    }\n  }\n  @keyframes fade-in {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0.8;\n    }\n  }\n  @supports (display: flex) {\n    @-webkit-keyframes fade-in {\n      0% {\n        opacity: 0;\n      }\n      100% {\n        opacity: 1;\n      }\n    }\n    @keyframes fade-in {\n      0% {\n        opacity: 0;\n      }\n      100% {\n        opacity: 1;\n      }\n    }\n  }\n}\n@-webkit-keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n```\n\n## Usage\n\n```js\npostcss([ require('postcss-discard-overridden') ])\n```\n\nSee [PostCSS] docs for examples for your environment.\n","readmeFilename":"README.md","_id":"postcss-discard-overridden@0.1.1","_shasum":"8b1eaf554f686fb288cd874c55667b0aa3668d58","_resolved":"https://registry.npmjs.org/postcss-discard-overridden/-/postcss-discard-overridden-0.1.1.tgz","_from":"https://registry.npmjs.org/postcss-discard-overridden/-/postcss-discard-overridden-0.1.1.tgz"}