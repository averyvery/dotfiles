{"name":"karma-coverage","version":"0.5.5","description":"A Karma plugin. Generate code coverage.","main":"lib/index.js","scripts":{"test":"grunt test"},"repository":{"type":"git","url":"git://github.com/karma-runner/karma-coverage.git"},"keywords":["karma-plugin","karma-preprocessor","karma-reporter","coverage","istanbul"],"author":{"name":"SATO taichi","email":"ryushi@gmail.com"},"dependencies":{"istanbul":"^0.4.0","dateformat":"^1.0.6","minimatch":"^3.0.0","source-map":"^0.5.1"},"license":"MIT","devDependencies":{"chai":"^3.3.0","eslint":"^2.2.0","eslint-config-standard":"^5.1.0","eslint-plugin-promise":"^1.1.0","eslint-plugin-react":"^4.1.0","eslint-plugin-standard":"^1.1.0","grunt":"^0.4.1","grunt-bump":"^0.7.0","grunt-conventional-changelog":"^6.1.0","grunt-conventional-github-releaser":"^1.0.0","grunt-eslint":"^18.0.0","grunt-karma":"^0.12.0","grunt-npm":"^0.0.2","grunt-simple-mocha":"^0.4.0","ibrik":"^2.0.0","karma":"^0.13.7","karma-coffee-preprocessor":"^0.3.0","karma-firefox-launcher":"^0.1.6","karma-mocha":"^0.2.0","karma-requirejs":"^0.2.2","load-grunt-tasks":"^3.2.0","lodash":"^4.5.0","mocha":"^2.2.5","mocks":"0.0.15","requirejs":"^2.1.20","sinon":"^1.14.1","sinon-chai":"^2.8.0"},"contributors":[{"name":"dignifiedquire","email":"dignifiedquire@gmail.com"},{"name":"Friedel Ziegelmayer","email":"dignifiedquire@gmail.com"},{"name":"Aymeric Beaumet","email":"aymeric@beaumet.me"},{"name":"Tim Kang","email":"timkang@ucla.edu"},{"name":"Nick Malaguti","email":"nmalaguti@palantir.com"},{"name":"Maksim Ryzhikov","email":"rv.maksim@gmail.com"},{"name":"nicojs","email":"jansennico@gmail.com"},{"name":"Allen Bierbaum","email":"abierbaum@gmail.com"},{"name":"Wei Kin Huang","email":"weikin.huang04@gmail.com"},{"name":"Tanguy Krotoff","email":"tkrotoff@gmail.com"},{"name":"Douglas Duteil","email":"douglasduteil@gmail.com"},{"name":"Matt Winchester","email":"m_winche@yahoo.com"},{"name":"Mark Ethan Trostler","email":"mark@zzo.com"},{"name":"Michael Stramel","email":"m.stramel89@gmail.com"},{"name":"Nick Matantsev","email":"nick.matantsev@gmail.com"},{"name":"Petar Manev","email":"petar.manev2010@gmail.com"},{"name":"Robin Böhm","email":"robinboehm@googlemail.com"},{"name":"Ron Derksen","email":"ron.derksen@informaat.nl"},{"name":"Ruben Bridgewater","email":"ruben.bridgewater@fintura.de"},{"name":"Sahat Yalkabov","email":"sakhat@gmail.com"},{"name":"Tanjo, Hiroyuki","email":"expheno@gmail.com"},{"name":"Taylor Hakes","email":"taylor@taylorhakes.com"},{"name":"Timo Tijhof","email":"krinklemail@gmail.com"},{"name":"Tom Kirkpatrick","email":"tom@systemseed.com"},{"name":"Tyler Waters","email":"tyler.waters@gmail.com"},{"name":"Vincent Lemeunier","email":"vincent.lemeunier+git@gmail.com"},{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com"},{"name":"aprooks","email":"alexander.prooks@gmail.com"},{"name":"carlos","email":"cafesanu@gmail.com"},{"name":"fbergr","email":"fbergr@gmail.com"},{"name":"piecyk","email":"piecyk@gmail.com"},{"name":"terussell85","email":"terussell85@gmail.com"},{"name":"Chris Gladd","email":"chris.m.gladd@gmail.com"},{"name":"Clayton Watts","email":"cletusw@gmail.com"},{"name":"Dan Watling","email":"dan@synaptik.com"},{"name":"Dmitry Petrov","email":"dpetroff@gmail.com"},{"name":"Greg Varsanyi","email":"gvarsanyi@gmail.com"},{"name":"James Talmage","email":"james@talmage.io"},{"name":"Joseph Connolly","email":"joec@avinetworks.com"},{"name":"Joshua Appelman","email":"jappelman@xebia.com"},{"name":"Julie","email":"ju.ralph@gmail.com"},{"name":"Kyle Welsby","email":"kyle@mekyle.com"},{"name":"Lloyd Smith II","email":"lloyd@trove.com"},{"name":"Maciej Rzepiński","email":"maciej.rzepinski@gmail.com"}],"readme":"# karma-coverage\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-coverage)\n [![npm version](https://img.shields.io/npm/v/karma-coverage.svg?style=flat-square)](https://www.npmjs.com/package/karma-coverage) [![npm downloads](https://img.shields.io/npm/dm/karma-coverage.svg?style=flat-square)](https://www.npmjs.com/package/karma-coverage)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-coverage/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-coverage) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-coverage.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-coverage) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-coverage.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-coverage#info=devDependencies)\n\n> Generate code coverage using [Istanbul].\n\n## Installation\n\nThe easiest way is to install `karma-coverage` as a `devDependency`,\nby running\n\n```bash\nnpm install karma karma-coverage --save-dev\n```\n\n## Configuration\n\nFor configuration details see [docs/configuration](docs/configuration.md).\n\n## Examples\n\n### Basic\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    files: [\n      'src/**/*.js',\n      'test/**/*.js'\n    ],\n\n    // coverage reporter generates the coverage\n    reporters: ['progress', 'coverage'],\n\n    preprocessors: {\n      // source files, that you wanna generate coverage for\n      // do not include tests or libraries\n      // (these files will be instrumented by Istanbul)\n      'src/**/*.js': ['coverage']\n    },\n\n    // optionally, configure the reporter\n    coverageReporter: {\n      type : 'html',\n      dir : 'coverage/'\n    }\n  });\n};\n```\n### CoffeeScript\n\nFor an example on how to use with [CoffeeScript](http://coffeescript.org/)\nsee [examples/coffee](examples/coffee). For an example of how to use with\nCoffeeScript and the RequireJS module loader, see\n[examples/coffee-requirejs](examples/coffee-requirejs) (and also see\nthe `useJSExtensionForCoffeeScript` option in\n[docs/configuration.md](docs/configuration.md)).\n\n### Advanced, multiple reporters\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    files: [\n      'src/**/*.js',\n      'test/**/*.js'\n    ],\n    reporters: ['progress', 'coverage'],\n    preprocessors: {\n      'src/**/*.js': ['coverage']\n    },\n    coverageReporter: {\n      // specify a common output directory\n      dir: 'build/reports/coverage',\n      reporters: [\n        // reporters not supporting the `file` property\n        { type: 'html', subdir: 'report-html' },\n        { type: 'lcov', subdir: 'report-lcov' },\n        // reporters supporting the `file` property, use `subdir` to directly\n        // output them in the `dir` directory\n        { type: 'cobertura', subdir: '.', file: 'cobertura.txt' },\n        { type: 'lcovonly', subdir: '.', file: 'report-lcovonly.txt' },\n        { type: 'teamcity', subdir: '.', file: 'teamcity.txt' },\n        { type: 'text', subdir: '.', file: 'text.txt' },\n        { type: 'text-summary', subdir: '.', file: 'text-summary.txt' },\n      ]\n    }\n  });\n};\n```\n\n### FAQ\n\n#### Don't minify instrumenter output\n\nWhen using the istanbul instrumenter (default), you can disable code compaction by adding the following to your configuration.\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    coverageReporter: {\n      instrumenterOptions: {\n        istanbul: { noCompact: true }\n      }\n    }\n  });\n};\n```\n\n----\n\nFor more information on Karma see the [homepage].\n\n\n[homepage]: http://karma-runner.github.com\n[Istanbul]: https://github.com/gotwarlost/istanbul\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/karma-runner/karma-coverage/issues"},"homepage":"https://github.com/karma-runner/karma-coverage#readme","_id":"karma-coverage@0.5.5","_shasum":"b0d58b1025d59d5c6620263186f1d58f5d5348c5","_resolved":"https://registry.npmjs.org/karma-coverage/-/karma-coverage-0.5.5.tgz","_from":"https://registry.npmjs.org/karma-coverage/-/karma-coverage-0.5.5.tgz"}