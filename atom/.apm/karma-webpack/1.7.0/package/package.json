{"name":"karma-webpack","version":"1.7.0","author":{"name":"Tobias Koppers @sokra"},"description":"Use webpack with karma","peerDependencies":{"webpack":"^1.4.0"},"dependencies":{"async":"~0.9.0","loader-utils":"^0.2.5","lodash":"^3.8.0","source-map":"^0.1.41","webpack-dev-middleware":"^1.0.11"},"devDependencies":{"karma":">=0.13.2 < 1","karma-mocha":"~0.1.9","karma-chrome-launcher":"~0.1.5","karma-spec-reporter":"~0.0.16","coffee-loader":"~0.7.2"},"license":"MIT","homepage":"http://github.com/webpack/karma-webpack","repository":{"type":"git","url":"git+https://github.com/webpack/karma-webpack.git"},"main":"index.js","readme":"# karma-webpack\r\n\r\n## Installation\r\n\r\n``` sh\r\nnpm install --save-dev karma-webpack\r\n```\r\n\r\n## Usage\r\n\r\n``` javascript\r\n// Karma configuration\r\n\r\nmodule.exports = function(config) {\r\n\tconfig.set({\r\n\t\t// ... normal karma configuration\r\n\r\n\t\tfiles: [\r\n\t\t\t// all files ending in \"_test\"\r\n\t\t\t'test/*_test.js',\r\n\t\t\t'test/**/*_test.js'\r\n\t\t\t// each file acts as entry point for the webpack configuration\r\n\t\t],\r\n\r\n\t\tpreprocessors: {\r\n\t\t\t// add webpack as preprocessor\r\n\t\t\t'test/*_test.js': ['webpack'],\r\n\t\t\t'test/**/*_test.js': ['webpack']\r\n\t\t},\r\n\r\n\t\twebpack: {\r\n\t\t\t// karma watches the test entry points\r\n\t\t\t// (you don't need to specify the entry option)\r\n\t\t\t// webpack watches dependencies\r\n\r\n\t\t\t// webpack configuration\r\n\t\t},\r\n\r\n\t\twebpackMiddleware: {\r\n\t\t\t// webpack-dev-middleware configuration\r\n\t\t\t// i. e.\r\n\t\t\tnoInfo: true\r\n\t\t},\r\n\r\n\t\tplugins: [\r\n\t\t\trequire(\"karma-webpack\")\r\n\t\t]\r\n\r\n\t});\r\n};\r\n```\r\n\r\n## Alternative usage\r\n\r\nThis configuration is more performant, but you cannot run single test anymore (only the complete suite).\r\n\r\nThe above configuration generate a webpack bundle for each test. For many testcases this can result in many big files. The alterative configuration creates a single bundle with all testcases.\r\n\r\n``` javascript\r\n\t\tfiles: [\r\n\t\t\t// only specify one entry point\r\n\t\t\t// and require all tests in there\r\n\t\t\t'test/test_index.js'\r\n\t\t],\r\n\r\n\t\tpreprocessors: {\r\n\t\t\t// add webpack as preprocessor\r\n\t\t\t'test/test_index.js': ['webpack']\r\n\t\t},\r\n```\r\n\r\n``` javascript\r\n// test/test_index.js\r\n\r\n// require all modules ending in \"_test\" from the\r\n// current directory and all subdirectories\r\nvar testsContext = require.context(\".\", true, /_test$/);\r\ntestsContext.keys().forEach(testsContext);\r\n```\r\n\r\nEvery test file is required using the [require.context](http://webpack.github.io/docs/context.html#require-context) and compiled with webpack into one test bundle.\r\n\r\n## Source Maps\r\n\r\nYou can use the `karma-sourcemap-loader` to get the source maps generated for your test bundle.\r\n\r\n```\r\nnpm install --save-dev karma-sourcemap-loader\r\n```\r\n\r\nAnd then add it to your preprocessors\r\n\r\n``` javascript\r\npreprocessors: {\r\n\t'test/test_index.js': ['webpack', 'sourcemap']\r\n}\r\n```\r\n\r\nAnd tell webpack to generate sourcemaps\r\n\r\n``` javascript\r\nwebpack: {\r\n  // ...\r\n\tdevtool: 'inline-source-map'\r\n}\r\n```\r\n\r\n## Options\r\n\r\nThis is the full list of options you can specify in your Karma config.\r\n\r\n### webpack\r\n\r\nWebpack configuration.\r\n\r\n### webpackMiddleware\r\n\r\nConfiguration for webpack-dev-middleware.\r\n\r\n## License\r\n\r\nCopyright 2014-2015 Tobias Koppers\r\n\r\n[MIT](http://www.opensource.org/licenses/mit-license.php)\r\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/webpack/karma-webpack/issues"},"_id":"karma-webpack@1.7.0","_shasum":"7e5a4fb2ab68b0cc1c7a4fbfa72bb76eeb18cb2a","_resolved":"https://registry.npmjs.org/karma-webpack/-/karma-webpack-1.7.0.tgz","_from":"https://registry.npmjs.org/karma-webpack/-/karma-webpack-1.7.0.tgz"}