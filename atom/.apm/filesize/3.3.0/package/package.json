{"name":"filesize","description":"JavaScript library to generate a human readable String describing the file size","version":"3.3.0","homepage":"http://filesizejs.com","author":{"name":"Jason Mulligan","email":"jason.mulligan@avoidwork.com"},"repository":{"type":"git","url":"git://github.com/avoidwork/filesize.js.git"},"bugs":{"url":"https://github.com/avoidwork/filesize.js/issues"},"license":"BSD-3-Clause","main":"lib/filesize","engines":{"node":">= 0.4.0"},"scripts":{"test":"grunt test"},"devDependencies":{"babel-eslint":"^4.1.4","babel-preset-es2015":"^6.1.2","grunt":"^0.4.5","grunt-babel":"^6.0.0","grunt-cli":"^0.1.13","grunt-contrib-concat":"^0.1.3","grunt-contrib-watch":"^0.2.0","grunt-eslint":"^17.3.1","grunt-contrib-nodeunit":"^0.4.1","grunt-contrib-uglify":"^0.9.1","grunt-sed":"^0.1.1"},"keywords":["file","filesize","size","readable","file system","bytes","diff"],"readme":"# filesize.js\n\n[![build status](https://secure.travis-ci.org/avoidwork/filesize.js.png)](http://travis-ci.org/avoidwork/filesize.js) [![Join the chat at https://gitter.im/avoidwork/filesize.js](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/avoidwork/filesize.js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nfilesize.js provides a simple way to get a human readable file size string from a number (float or integer) or string.\n\n## Optional settings\n\n`filesize()` accepts an optional descriptor Object as a second argument, so you can customize the output.\n\n### base\n_***(number)***_ Number base, default is `2`\n\n### bits\n_***(boolean)***_ Enables `bit` sizes, default is `false`\n\n### exponent\n_***(number)***_ Specifies the SI suffix via exponent, e.g. `2` is `MB` for bytes, default is `-1`\n\n### output\n_***(string)***_ Output of function (`array`, `exponent`, `object`, or `string`), default is `string`\n\n### round\n_***(number)***_ Decimal place, default is `2`\n\n### spacer\n_***(string)***_ Character between the `result` and `suffix`, default is `\" \"`\n\n### standard\n_***(string)***_ Standard unit of measure, can be `iec` or `jedec`, default is `jedec`; can be overruled by `base`\n\n### symbols\n_***(object)***_ Dictionary of SI/JEDEC symbols to replace for localization, defaults to english if no match is found\n\n### suffixes (deprecated: use 'symbols')\n_***(object)***_ Dictionary of SI/JEDEC symbols to replace for localization, defaults to english if no match is found\n\n### unix\n_***(boolean)***_ Enables unix style human readable output, e.g `ls -lh`, default is `false`\n\n## Examples\n\n```javascript\nfilesize(500);                        // \"500 B\"\nfilesize(500, {bits: true});          // \"4 Kb\"\nfilesize(265318, {base: 10});         // \"265.32 kB\"\nfilesize(265318);                     // \"259.1 KB\"\nfilesize(265318, {round: 0});         // \"259 KB\"\nfilesize(265318, {output: \"array\"});  // [259.1, \"KB\"]\nfilesize(265318, {output: \"object\"}); // {value: 259.1, suffix: \"KB\", symbol: \"KB\"}\nfilesize(1, {symbols: {B: \"Б\"}});    // \"1 Б\"\nfilesize(1024);                       // \"1 KB\"\nfilesize(1024, {exponent: 0});        // \"1024 B\"\nfilesize(1024, {output: \"exponent\"}); // 1\nfilesize(265318, {standard: \"iec\"});  // \"259.1 KiB\"\n```\n\n## How can I load filesize.js?\nfilesize.js supports AMD loaders (require.js, curl.js, etc.), node.js & npm (npm install filesize), or using a script tag.\n\n## License\nCopyright (c) 2016 Jason Mulligan\nLicensed under the BSD-3 license.\n","readmeFilename":"README.md","_id":"filesize@3.3.0","_shasum":"53149ea3460e3b2e024962a51648aa572cf98122","_resolved":"https://registry.npmjs.org/filesize/-/filesize-3.3.0.tgz","_from":"https://registry.npmjs.org/filesize/-/filesize-3.3.0.tgz"}