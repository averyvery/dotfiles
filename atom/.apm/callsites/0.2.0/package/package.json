{"name":"callsites","version":"0.2.0","description":"Get callsites from the V8 stack trace API","license":"MIT","repository":{"type":"git","url":"git+https://github.com/sindresorhus/callsites.git"},"author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"http://sindresorhus.com"},"engines":{"node":">=0.10.0"},"scripts":{"test":"mocha"},"files":["index.js"],"keywords":["callsites","callsite","v8","stacktrace","stack","trace","function","file","line","debug"],"devDependencies":{"mocha":"*"},"readme":"# callsites [![Build Status](https://travis-ci.org/sindresorhus/callsites.svg?branch=master)](https://travis-ci.org/sindresorhus/callsites)\n\n> Get callsites from the [V8 stack trace API](https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi)\n\n\n## Install\n\n```sh\n$ npm install --save callsites\n```\n\n\n## Usage\n\n```js\nvar callsites = require('callsites');\n\nfunction unicorn() {\n\tconsole.log(callsites()[0].getFileName());\n\t//=> /Users/sindresorhus/dev/callsites/test.js\n}\n\nunicorn();\n```\n\n## API\n\nReturns an array of callsite objects with the following methods:\n\n- `getThis`: returns the value of this\n- `getTypeName`: returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object's [[Class]] internal property.\n- `getFunction`: returns the current function\n- `getFunctionName`: returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context.\n- `getMethodName`: returns the name of the property of this or one of its prototypes that holds the current function\n- `getFileName`: if this function was defined in a script returns the name of the script\n- `getLineNumber`: if this function was defined in a script returns the current line number\n- `getColumnNumber`: if this function was defined in a script returns the current column number\n- `getEvalOrigin`: if this function was created using a call to eval returns a CallSite object representing the location where eval was called\n- `isToplevel`: is this a toplevel invocation, that is, is this the global object?\n- `isEval`: does this call take place in code defined by a call to eval?\n- `isNative`: is this call in native V8 code?\n- `isConstructor`: is this a constructor call?\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n","readmeFilename":"readme.md","bugs":{"url":"https://github.com/sindresorhus/callsites/issues"},"homepage":"https://github.com/sindresorhus/callsites#readme","_id":"callsites@0.2.0","_shasum":"afab96262910a7f33c19a5775825c69f34e350ca","_resolved":"https://registry.npmjs.org/callsites/-/callsites-0.2.0.tgz","_from":"https://registry.npmjs.org/callsites/-/callsites-0.2.0.tgz"}