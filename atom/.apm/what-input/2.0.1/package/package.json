{"name":"what-input","version":"2.0.1","description":"A global utility for tracking the current input method (mouse, keyboard or touch).","main":"what-input.js","repository":{"type":"git","url":"git+https://github.com/ten1seven/what-input.git"},"keywords":["accessibility","a11y","input","javascript"],"author":{"name":"Jeremy Fields","email":"jeremy.fields@viget.com"},"license":"MIT","bugs":{"url":"https://github.com/ten1seven/what-input/issues"},"homepage":"https://github.com/ten1seven/what-input","devDependencies":{"browser-sync":"2.11.1","del":"2.2.0","gulp":"3.9.1","gulp-concat":"2.6.0","gulp-notify":"2.2.0","gulp-plumber":"1.1.0","gulp-rename":"1.2.2","gulp-uglify":"1.5.2","require-dir":"0.3.0"},"dependencies":{"gulp-header":"1.7.1"},"readme":"# What Input?\n\n## What Input is now v2.0.0\n\nBecause of the ever-shifing complexity of supporting module loaders, __What Input__ v2.0.0 no longer supports UMD module loading (e.g., `var WhatInput = require('what-input')`). You can still require What Input without assigning a variable (e.g., `require('what-input')`).\n\nIf you need UMD module loading, check out the last [v1.x.x](https://github.com/ten1seven/what-input/releases/tag/v1.2.5) release or [open a ticket](https://github.com/ten1seven/what-input/issues) so I can assess demand.\n\n## About What Input\n\n__A global utility for tracking the current input method (mouse, keyboard or touch).__\n\nWhat Input improves on [track-focus](https://github.com/ten1seven/track-focus) by adding a data attribute on the `<body>` instead of littering the DOM with classes on elements that have been interacted with. It also exposes a simple API that can be used for scripting interactions.\n\n## How it works\n\nWhat Input uses event bubbling on the `<body>` to watch for mouse, keyboard and touch events (via `mousedown`, `keydown` and `touchstart`). It then sets or updates a `data-whatinput` on the `<body>`.\n\nSince the form fields `input` and `textarea` rely on the keyboard as their only means of input, What Input _does not_ switch the input type to keyboard when typing to preserve the last detected input type. To override this behavior and allow the keyboard to be recorded, add:\n\n```html\n<body data-whatinput-formtyping>\n```\n\nWhere present, Pointer Events are supported, but note that `pen` inputs are remapped to `touch`.\n\nWhat Input also exposes a tiny API that allows the developer to ask for or set the current input.\n\n_What Input does not make assumptions about the input environment before the user makes their first interaction._\n\n## Installing\n\nDownload the file directly...\n\nor install via Bower...\n\n```shell\nbower install what-input\n```\n\nor install via NPM...\n\n```shell\nnpm install what-input\n```\n\n## Usage\n\nInclude the script directly in your project.\n\n```html\n<script src=\"assets/scripts/what-input.js\"></script>\n```\n\nOr require with a script loader.\n\n```javascript\nrequire('what-input');\n```\n\nWhat Input will start doing its thing while you do yours.\n\n### Example Styling\n\n```css\n/**\n * set a default :focus style\n */\na:focus {\n  outline: 3px dotted #06c;\n}\n\n/*\n * remove :focus style via What Input using progressive enhancement\n * so :focus isn't left broken if JavaScript fails\n */\n[data-whatinput=\"mouse\"] a:focus,\n[data-whatinput=\"touch\"] a:focus {\n  outline: none;\n}\n```\n\n### Scripting\n\n#### Current Input\n\nAsk What Input what the current input method is. This works best if asked after the events What Input is bound to (`mousedown`, `keydown` and `touchstart`). Because `click` always executes last in the event tree, What Input will be able to answer with the event that _just_ happened.\n\n```javascript\nwhatInput.ask(); // returns `mouse`, `keyboard` or `touch`\n\nmyButton.addEventListener('click', function() {\n\n  if (whatInput.ask() === 'mouse') {\n    // do mousy things\n  } else if (whatInput.ask() === 'keyboard') {\n    // do keyboard things\n  }\n\n});\n```\n\nAsk What Input to return an array of all the input types that have been used _so far_.\n\n```javascript\nwhatInput.types(); // ex. returns ['mouse', 'keyboard']\n```\n\nTell What Input what's being used. This can be useful if you'd like to set an input method before the user has actually interacted with the page. What Input is not so assumptive on its own.\n\n```javascript\nwhatInput.set('hamster');\n\nwhatInput.ask(); // 'hamster'\n```\n\n#### Key Logging\n\nAlong with tracking the use of the keyboard, What Input keeps track of the currently pressed keys and stores them in an array. Instead of returning cryptic key codes, What Input uses plain language.\n\nThis can be used if, for example, you want to track how an element is being interacted with.\n\n```javascript\nwhatInput.keys(); // ex. returns ['shift', 'tab']\n\nmyMenuTab.addEventListener('keyup', function() {\n\n  // query for the down arrow\n  if (whatInput.keys().indexOf('down') !== -1) {\n    // open the dropdown menu\n  }\n\n});\n```\n\nWhat Input only responds to the following \"action\" keys: 'tab', 'enter', 'shift', 'esc', 'space', 'left', 'up', 'right' and 'down'.\n\n## Compatibility\n\nWhat Input works in all modern browsers. For compatibility with IE8, polyfills are required for:\n\n* addEventListener\n* IndexOf\n\nAdd your own, or grab the bundle included here.\n\n```html\n<!--[if lte IE 8]>\n  <script src=\"lte-IE8.js\"></script>\n<![endif]-->\n```\n\n## Demo\n\nCheck out the demo to see What Input in action.\n\nhttp://ten1seven.github.io/what-input\n\n## Acknowledgments\n\nSpecial thanks to [Viget](http://viget.com/) for their encouragement and commitment to open source projects. Visit [code.viget.com](http://code.viget.com/) to see more projects from [Viget](http://viget.com).\n\nWhat Input is written and maintained by [@ten1seven](https://github.com/ten1seven).\n\n## License\n\nWhat Input is freely available under the [MIT License](http://opensource.org/licenses/MIT).\n","readmeFilename":"README.md","_id":"what-input@2.0.1","_shasum":"d4ca673416ecd66728c65c8c2aeae16b234f8880","_resolved":"https://registry.npmjs.org/what-input/-/what-input-2.0.1.tgz","_from":"https://registry.npmjs.org/what-input/-/what-input-2.0.1.tgz"}