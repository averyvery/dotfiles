{"name":"gulp-header","version":"1.7.1","description":"Gulp extension to add header to file(s) in the pipeline.","main":"./index.js","proxy":null,"https-proxy":null,"directories":{"test":"test"},"scripts":{"test":"mocha --reporter spec","publish-major":"npm version major && npm publish && git push origin master && git push --tags","publish-minor":"npm version minor && npm publish && git push origin master && git push --tags","publish-patch":"npm version patch && npm publish && git push origin master && git push --tags"},"repository":{"type":"git","url":"git://github.com/tracker1/gulp-header.git"},"keywords":["header","gulpplugin","eventstream"],"author":{"name":"Michael J. Ryan","email":"mxryan@godaddy.com","url":"http://github.com/tracker1"},"contributors":[{"name":"GoDaddy.com","url":"http://github.com/godaddy"},{"name":"Douglas Duteil","email":"douglasduteil@gmail.com","url":"http://github.com/douglasduteil"}],"license":"MIT","bugs":{"url":"https://github.com/tracker1/gulp-header/issues"},"dependencies":{"gulp-util":"*","object-assign":"*","through2":"*","concat-with-sourcemaps":"*"},"devDependencies":{"event-stream":"^3.1.7","gulp":"^3.9.0","mocha":"*","should":"*","vinyl":"*"},"readme":"# gulp-header [![NPM version](https://badge.fury.io/js/gulp-header.png)](http://badge.fury.io/js/gulp-header) [![Build Status](https://travis-ci.org/tracker1/gulp-header.png)](https://travis-ci.org/tracker1/gulp-header)\n\ngulp-header is a [Gulp](https://github.com/gulpjs/gulp) extension to add a header to file(s) in the pipeline.  [Gulp is a streaming build system](https://github.com/gulpjs/gulp) utilizing [node.js](http://nodejs.org/).\n\n## Install\n\n```javascript\nnpm install --save gulp-header\n```\n\n## Usage\n\n```javascript\n// assign the module to a local variable\nvar header = require('gulp-header');\n\n\n// literal string\n// NOTE: a line separator will not be added automatically\ngulp.src('./foo/*.js')\n  .pipe(header('Hello'))\n  .pipe(gulp.dest('./dist/'))\n\n\n// ejs style templating\ngulp.src('./foo/*.js')\n  .pipe(header('Hello <%= name %>\\n', { name : 'World'} ))\n  .pipe(gulp.dest('./dist/'))\n\n\n// ES6-style template string\ngulp.src('./foo/*.js')\n  .pipe(header('Hello ${name}\\n', { name : 'World'} ))\n  .pipe(gulp.dest('./dist/'))\n\n\n// using data from package.json\nvar pkg = require('./package.json');\nvar banner = ['/**',\n  ' * <%= pkg.name %> - <%= pkg.description %>',\n  ' * @version v<%= pkg.version %>',\n  ' * @link <%= pkg.homepage %>',\n  ' * @license <%= pkg.license %>',\n  ' */',\n  ''].join('\\n');\n\ngulp.src('./foo/*.js')\n  .pipe(header(banner, { pkg : pkg } ))\n  .pipe(gulp.dest('./dist/'))\n\n\n// reading the header file from disk\nvar fs = require('fs');\ngulp.src('./foo/*.js')\n  .pipe(header(fs.readFileSync('header.txt', 'utf8'), { pkg : pkg } ))\n  .pipe(gulp.dest('./dist/'))\n```\n\n## API\n\n### header(text, data)\n\n#### text\n\nType: `String`  \nDefault: `''`  \n\nThe template text.\n\n\n#### data\n\nType: `Object`  \nDefault: `{}`  \n\nThe data object used to populate the text.\n\n*NOTE: using `false` will disable template processing of the header* ","readmeFilename":"README.md","homepage":"https://github.com/tracker1/gulp-header#readme","_id":"gulp-header@1.7.1","_shasum":"e3527986491076bec974db98b5e1c24f4533c42e","_resolved":"https://registry.npmjs.org/gulp-header/-/gulp-header-1.7.1.tgz","_from":"https://registry.npmjs.org/gulp-header/-/gulp-header-1.7.1.tgz"}