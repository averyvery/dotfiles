{"_id":"fraction.js","_rev":"33-5930664a97a4f4e63d4023fbe24cff8e","name":"fraction.js","time":{"modified":"2016-04-07T15:33:59.598Z","created":"2014-03-12T01:46:09.440Z","1.0.0":"2014-03-12T01:46:09.440Z","1.1.0":"2014-03-21T19:04:46.856Z","1.2.0":"2014-04-17T01:27:50.505Z","1.2.1":"2014-06-20T09:39:39.099Z","1.3.0":"2014-06-29T13:27:22.836Z","1.5.0":"2015-02-08T18:40:22.146Z","1.6.0":"2015-02-14T12:29:02.844Z","1.7.0":"2015-03-25T19:19:20.808Z","1.9.0":"2015-05-15T08:32:41.163Z","2.0.0":"2015-05-30T23:53:50.352Z","2.2.0":"2015-06-04T23:30:52.206Z","2.3.0":"2015-06-23T11:16:00.181Z","2.4.0":"2015-07-03T14:52:32.554Z","2.4.1":"2015-07-07T12:56:03.869Z","2.5.0":"2015-07-29T17:06:31.269Z","2.6.0":"2015-08-23T01:26:16.843Z","2.7.0":"2015-08-23T20:20:46.533Z","2.8.0":"2015-09-04T16:48:58.496Z","2.9.0":"2015-09-06T11:01:45.144Z","3.0.0":"2015-09-09T11:09:48.253Z","3.1.0":"2016-01-18T02:09:43.567Z","3.2.0":"2016-01-18T05:20:54.892Z","3.2.5":"2016-02-06T12:29:12.803Z","3.3.0":"2016-03-24T22:53:31.838Z","3.3.1":"2016-04-07T15:33:59.598Z"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist-tags":{"latest":"3.3.1"},"description":"A rational number library","readme":"# Fraction.js - ℚ in JavaSript\n\n[![NPM Package](https://img.shields.io/npm/v/fraction.js.svg?style=flat)](https://npmjs.org/package/fraction.js \"View this project on npm\")\n[![Build Status](https://travis-ci.org/infusion/Fraction.js.svg?branch=master)](https://travis-ci.org/infusion/Fraction.js)\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)\n\nTired of inprecise numbers represented by doubles, which have to store rational and irrational numbers like PI or sqrt(2) the same way? Obviously the following problem is preventable:\n\n```javascript\n1 / 98 * 98 // = 0.9999999999999999\n```\n\nIf you need more precision or just want a fraction as a result, have a look at *Fraction.js*:\n\n```javascript\nvar Fraction = require('fraction.js');\n\nFraction(1).div(98).mul(98) // = 1\n```\n\nInternally, numbers are represented as *numerator / denominator*, which adds just a little overhead. However, the library is written with performance in mind and outperforms any other implementation, as you can see [here](http://jsperf.com/convert-a-rational-number-to-a-babylonian-fractions/28). This basic data-type makes it the perfect basis for [Polynomial.js](https://github.com/infusion/Polynomial.js) and [Math.js](https://github.com/josdejong/mathjs).\n\nConvert decimal to fraction\n===\nThe simplest job for fraction.js is to get a fraction out of a decimal:\n```javascript\nvar x = new Fraction(1.88);\nvar res = x.toFraction(true); // String \"1 22/25\"\n```\n\nExamples / Motivation\n===\nA simple example might be\n\n```javascript\nvar f = new Fraction(\"9.4'31'\"); // 9.4313131313131...\nf.mul([-4, 3]).mod(\"4.'8'\"); // 4.88888888888888...\n```\nThe result is\n\n```javascript\nconsole.log(f.toFraction()); // -4154 / 1485\n```\nYou could of course also access the sign (s), numerator (n) and denominator (d) on your own:\n```javascript\nf.s * f.n / f.d = -1 * 4154 / 1485 = -2.797306...\n```\n\nIf you would try to calculate it yourself, you would come up with something like:\n\n```javascript\n(9.4313131 * (-4 / 3)) % 4.888888 = -2.797308133...\n```\n\nQuite okay, but yea - not as accurate as it could be.\n\n\nLaplace Probability\n===\nSimple example. What's the probability of throwing a 3, and 1 or 4, and 2 or 4 or 6 with a fair dice?\n\nP({3}):\n```javascript\nvar p = new Fraction([3].length, 6).toString(); // 0.1(6)\n```\n\nP({1, 4}):\n```javascript\nvar p = new Fraction([1, 4].length, 6).toString(); // 0.(3)\n```\n\nP({2, 4, 6}):\n```javascript\nvar p = new Fraction([2, 4, 6].length, 6).toString(); // 0.5\n```\n\nConvert degrees/minutes/seconds to precise rational representation:\n===\n\n57+45/60+17/3600\n```javascript\nvar deg = 57; // 57°\nvar min = 45; // 45 Minutes\nvar sec = 17; // 17 Seconds\n\nnew Fraction(deg).add(min, 60).add(sec, 3600).toString() // -> 57.7547(2)\n```\n\nRational approximation of irrational numbers\n===\n\nNow it's getting messy ;d To approximate a number like *sqrt(5) - 2* with a numerator and denominator, you can reformat the equation as follows: *pow(n / d + 2, 2) = 5*.\n\nThen the following algorithm will generate the rational number besides the binary representation.\n\n```javascript\nvar x = \"/\", s = \"\";\n\nvar a = new Fraction(0),\n    b = new Fraction(1);\nfor (var n = 0; n <= 10; n++) {\n\n    var c = new Fraction(a).add(b).div(2);\n\n    console.log(n + \"\\t\" + a.n + \"/\" + a.d + \"\\t\" + b.n + \"/\" + b.d + \"\\t\" + c.n + \"/\" + c.d + \"\\t\" + x);\n\n    if (c.add(2).pow(2) < 5) {\n        a = c;\n        x = \"1\";\n    } else {\n        b = c;\n        x = \"0\";\n    }\n    s+= x;\n}\nconsole.log(s)\n```\n\nThe result is\n\n```\nn\ta[n]\t\tb[n]\t\tc[n]\t\t\tx[n]\n0\t0/1\t\t\t1/1\t\t\t1/2\t\t\t\t/\n1\t0/1\t\t\t1/2\t\t\t1/4\t\t\t\t0\n2\t0/1\t\t\t1/4\t\t\t1/8\t\t\t\t0\n3\t1/8\t\t\t1/4\t\t\t3/16\t\t\t1\n4\t3/16\t\t1/4\t\t\t7/32\t\t\t1\n5\t7/32\t\t1/4\t\t\t15/64\t\t\t1\n6\t15/64\t\t1/4\t\t\t31/128\t\t\t1\n7\t15/64\t\t31/128\t\t61/256\t\t\t0\n8\t15/64\t\t61/256\t\t121/512\t\t\t0\n9\t15/64\t\t121/512\t\t241/1024\t\t0\n10\t241/1024\t121/512\t\t483/2048\t\t1\n```\nThus the approximation after 11 iterations of the bisection method is *483 / 2048* and the binary representation is 0.00111100011 (see [WolframAlpha](http://www.wolframalpha.com/input/?i=sqrt%285%29-2+binary))\n\n\nI published another example on how to approximate PI with fraction.js on my [blog](http://www.xarg.org/2014/03/precise-calculations-in-javascript/) (Still not the best idea to approximate irrational numbers, but it illustrates the capabilities of Fraction.js perfectly).\n\n\nGet the exact fractional part of a number\n---\n```javascript\nvar f = new Fraction(\"-6.(3416)\");\nconsole.log(\"\" + f.mod(1).abs()); // Same as: Math.abs(f - parseInt(f, 10));\n```\n\nMathematical correct modulo\n---\nThe behaviour on negative congruences is different to most modulo implementations in computer science. Even the *mod()* function of Fraction.js behaves in the typical way. To solve the problem of having the mathematical correct modulo with Fraction.js you could come up with this:\n\n```javascript\nvar a = -1;\nvar b = 10.99;\n\nconsole.log(new Fraction(a)\n     .mod(b)); // Not correct, normal implementation\n\nconsole.log(new Fraction(a)\n     .mod(b).add(b).mod(b)); // Correct! Mathematical Modulo\n```\n\nfmod() impreciseness circumvented\n---\nIt turns out that Fraction.js outperforms almost any fmod() implementation, including JavaScript itself, [php.js](http://phpjs.org/functions/fmod/), C++, Python, Java and even Wolframalpha due to the fact that numbers like 0.05, 0.1, ... are infinite decimal in base 2.\n\nThe equation *fmod(4.55, 0.05)* gives *0.04999999999999957*, wolframalpha says *1/20*. The correct answer should be **zero**, as 0.05 divides 4.55 without any remainder.\n\n\nParser\n===\n\nAny function (see below) as well as the constructor of the *Fraction* class parses its input and reduce it to the smallest term.\n\nYou can pass either Arrays, Objects, Integers, Doubles or Strings.\n\nArrays / Objects\n---\n```javascript\nnew Fraction(numerator, denominator);\nnew Fraction([numerator, denominator]);\nnew Fraction({n: numerator, d: denominator});\n```\n\nIntegers\n---\n```javascript\nnew Fraction(123);\n```\n\nDoubles\n---\n```javascript\nnew Fraction(55.4);\n```\n\n**Note:** If you pass a double as it is, Fraction.js will perform a number analysis based on Farey Sequences. If you concern performance, cache Fraction.js objects and pass arrays/objects.\n\nThe method is really precise, but too large exact numbers, like 1234567.9991829 will result in a wrong approximation. If you want to keep the number as it is, convert it to a string, as the string parser will not perform any further observations. If you have problems with the approximation, in the file `examples/approx.js` is a different approximation algorithm, which might work better in some more specific use-cases.\n\n\nStrings\n---\n```javascript\nnew Fraction(\"123.45\");\nnew Fraction(\"123/45\"); // A rational number represented as two decimals, separated by a slash\nnew Fraction(\"123:45\"); // A rational number represented as two decimals, separated by a colon\nnew Fraction(\"4 123/45\"); // A rational number represented as a whole number and a fraction\nnew Fraction(\"123.'456'\"); // Note the quotes, see below!\nnew Fraction(\"123.(456)\"); // Note the brackets, see below!\nnew Fraction(\"123.45'6'\"); // Note the quotes, see below!\nnew Fraction(\"123.45(6)\"); // Note the brackets, see below!\n```\n\nTwo arguments\n---\n```javascript\nnew Fraction(3, 2); // 3/2 = 1.5\n```\n\nRepeating decimal places\n---\n*Fraction.js* can easily handle repeating decimal places. For example *1/3* is *0.3333...*. There is only one repeating digit. As you can see in the examples above, you can pass a number like *1/3* as \"0.'3'\" or \"0.(3)\", which are synonym. There are no tests to parse something like 0.166666666 to 1/6! If you really want to handle this number, wrap around brackets on your own with the function below for example: 0.1(66666666)\n\nAssume you want to divide 123.32 / 33.6(567). [WolframAlpha](http://www.wolframalpha.com/input/?i=123.32+%2F+%2812453%2F370%29) states that you'll get a period of 1776 digits. *Fraction.js* comes to the same result. Give it a try:\n\n```javascript\nvar f = new Fraction(\"123.32\");\nconsole.log(\"Bam: \" + f.div(\"33.6(567)\"));\n```\n\nTo automatically make a number like \"0.123123123\" to something more Fraction.js friendly like \"0.(123)\", I hacked this little brute force algorithm in a 10 minutes. Improvements are welcome...\n\n```javascript\nfunction formatDecimal(str) {\n\n    var comma, pre, offset, pad, times, repeat;\n\n    if (-1 === (comma = str.indexOf(\".\")))\n        return str;\n\n    pre = str.substr(0, comma + 1);\n    str = str.substr(comma + 1);\n\n    for (var i = 0; i < str.length; i++) {\n\n        offset = str.substr(0, i);\n\n        for (var j = 0; j < 5; j++) {\n\n            pad = str.substr(i, j + 1);\n\n            times = Math.ceil((str.length - offset.length) / pad.length);\n\n            repeat = new Array(times + 1).join(pad); // Silly String.repeat hack\n\n            if (0 === (offset + repeat).indexOf(str)) {\n                return pre + offset + \"(\" + pad + \")\";\n            }\n        }\n    }\n    return null;\n}\n\nvar f, x = formatDecimal(\"13.0123123123\"); // = 13.0(123)\nif (x !== null) {\n   f = new Fraction(x);\n}\n```\n\nAttributes\n===\n\nThe Fraction object allows direct access to the numerator, denominator and sign attributes. It is ensured that only the sign-attribute holds sign information so that a sign comparision is only necessary against this attribute.\n\n```javascript\nvar f = new Fraction('-1/2');\nconsole.log(f.n); // Numerator: 1\nconsole.log(f.d); // Denominator: 2\nconsole.log(f.s); // Sign: -1\n```\n\n\nFunctions\n===\n\nFraction abs()\n---\nReturns the actual number without any sign information\n\nFraction neg()\n---\nReturns the actual number with flipped sign in order to get the additive inverse\n\nFraction add(n)\n---\nReturns the sum of the actual number and the parameter n\n\nFraction sub(n)\n---\nReturns the difference of the actual number and the parameter n\n\nFraction mul(n)\n---\nReturns the product of the actual number and the parameter n\n\nFraction div(n)\n---\nReturns the quotient of the actual number and the parameter n\n\nFraction pow(exp)\n---\nReturns the power of the actual number, raised to an integer exponent.\n*Note:* Rational exponents are planned, but would slow down the function a lot, because of a kinda slow root finding algorithm, whether the result will become irrational. So for now, only integer exponents are implemented.\n\nFraction mod(n)\n---\nReturns the modulus (rest of the division) of the actual object and n (this % n). It's a much more precise [fmod()](#fmod-impreciseness-circumvented) if you will. Please note that *mod()* is just like the modulo operator of most programming languages. If you want a mathematical correct modulo, see [here](#mathematical-correct-modulo).\n\nFraction mod()\n---\nReturns the modulus (rest of the division) of the actual object (numerator mod denominator)\n\nFraction gcd(n)\n---\nReturns the fractional greatest common divisor\n\nFraction lcm(n)\n---\nReturns the fractional least common multiple\n\nFraction ceil([places=0])\n---\nReturns the ceiling of a rational number (rounded up)\n\nFraction floor([places=0])\n---\nReturns the floor of a rational number (rounded down)\n\nFraction round([places=0])\n---\nReturns the rational number rounded (normal round)\n\nFraction inverse()\n---\nReturns the multiplicative inverse of the actual number (n / d becomes d / n) in order to get the reciprocal\n\nboolean equals(n)\n---\nCheck if two numbers are equal\n\nboolean compare(n)\n---\nCompare two numbers.\n```\nresult < 0: n is greater than actual number\nresult > 0: n is smaller than actual number\nresult = 0: n is equal to the actual number\n```\n\nboolean divisible(n)\n---\nCheck if two numbers are divisible (n divides this)\n\ndouble valueOf()\n---\nReturns a decimal representation of the fraction\n\nString toString()\n---\nGenerates an exact string representation of the actual object, including repeating decimal places of any length.\n\n**Note:** As `valueOf()` and `toString()` are provided, `toString()` is only called implicitly in a real string context. Using the plus-operator like `\"123\" + new Fraction` will call valueOf(), because JavaScript tries to combine two primitives first and concatenates them later, as string will be the more dominant type. `alert(new Fraction)` or `String(new Fraction)` on the other hand will do what you expect. If you really want to have control, you should call `toString()` or `valueOf()` explicitly!\n\nString toLatex(excludeWhole=false)\n---\nGenerates an exact LaTeX representation of the actual object. You can see a [live demo](http://www.xarg.org/2014/03/precise-calculations-in-javascript/) on my blog.\n\nThe optional boolean parameter indicates if you want to exclude the whole part. \"1 1/3\" instead of \"4/3\"\n\nString toFraction(excludeWhole=false)\n---\nGets a string representation of the fraction\n\nThe optional boolean parameter indicates if you want to exclude the whole part. \"1 1/3\" instead of \"4/3\"\n\nArray toContinued()\n---\nGets an array of the fraction represented as a continued fraction. The first element always contains the whole part.\n\n```javascript\nvar f = new Fraction('88/33');\nvar c = f.toContinued(); // [2, 1, 2]\n```\n\nFraction clone()\n---\nCreates a copy of the actual Fraction object\n\nOptions\n===\n\nThe library should work without configuring anything. However, there is one global option:\n\n```\nFraction.REDUCE = <true|false>\n```\n\nIt tells Fraction.js whether to reduce the fraction or not. \n\n```\n// Normal behavior\nvar f = Fraction(3, 6);\nconsole.log(f); // 1/2\n\n// Disable fraction reduction\nFraction.REDUCE = false;\nvar g = Fraction(3, 6);\nconsole.log(g); // 3/6\n\n// Back to normal behavior\nFraction.REDUCE = true;\nvar h = Fraction(g);\nconsole.log(h); // 1/2\n```\n\n\nExceptions\n===\nIf a really hard error occurs (parsing error, division by zero), *fraction.js* throws exceptions! Please make sure you handle them correctly.\n\n\n\nInstallation\n===\nInstalling fraction.js is as easy as cloning this repo or use one of the following commands:\n\n```\nbower install fraction.js\n```\nor\n\n```\nnpm install --save fraction.js\n```\n\nUsing Fraction.js with the browser\n===\n    <script src=\"fraction.js\"></script>\n    <script>\n        console.log(Fraction(\"123/456\"));\n    </script>\n\n\nUsing Fraction.js with require.js\n===\n    <script src=\"require.js\"></script>\n    <script>\n    requirejs(['fraction.js'],\n    function(Fraction) {\n        console.log(Fraction(\"123/456\"));\n    });\n    </script>\n\nCoding Style\n===\nAs every library I publish, fraction.js is also built to be as small as possible after compressing it with Google Closure Compiler in advanced mode. Thus the coding style orientates a little on maxing-out the compression rate. Please make sure you keep this style if you plan to extend the library.\n\n\nPrecision\n===\nFraction.js tries to circumvent floating point errors, by having an internal representation of numerator and denominator. As it relies on JavaScript, there is also a limit. The biggest number representable is `|Number.MAX_SAFE_INTEGER / 1|` and the smallest is `|1 / Number.MAX_SAFE_INTEGER|`, with `Number.MAX_SAFE_INTEGER=9007199254740991`.\n\nTesting\n===\nIf you plan to enhance the library, make sure you add test cases and all the previous tests are passing. You can test the library with\n\n```\nnpm test\n```\n\n\nCopyright and licensing\n===\nCopyright (c) 2015, Robert Eisele (robert@xarg.org)\nDual licensed under the MIT or GPL Version 2 licenses.\n","versions":{"1.1.0":{"name":"fraction.js","title":"fraction.js","version":"1.1.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"_id":"fraction.js@1.1.0","dist":{"shasum":"9c5e9b198d85733a88680c992f60f25f83ac7320","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-1.1.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"directories":{}},"1.2.0":{"name":"fraction.js","title":"fraction.js","version":"1.2.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"_id":"fraction.js@1.2.0","dist":{"shasum":"a0060008d092e5f8028ca76d72cdeedc7751dea8","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-1.2.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"directories":{}},"1.2.1":{"name":"fraction.js","title":"fraction.js","version":"1.2.1","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"c01664b5a30f25d9e7f601a1eabc888cbb74d770","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"_id":"fraction.js@1.2.1","_shasum":"5699742415ccced9650c928d29c1fefba946092d","_from":".","_npmVersion":"1.4.16","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"5699742415ccced9650c928d29c1fefba946092d","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-1.2.1.tgz"},"directories":{}},"1.3.0":{"name":"fraction.js","title":"fraction.js","version":"1.3.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"d3befba1f82aabdfd109abe2b53cecb081c1fbec","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"_id":"fraction.js@1.3.0","_shasum":"957f268fd3e61d6140826e122b985edc574b8aeb","_from":".","_npmVersion":"1.4.17","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"957f268fd3e61d6140826e122b985edc574b8aeb","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-1.3.0.tgz"},"directories":{}},"1.5.0":{"name":"fraction.js","title":"fraction.js","version":"1.5.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"71476469840d4c22dfc3d6d0f6dac6c3c3e807de","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"_id":"fraction.js@1.5.0","_shasum":"7de884a8161e3e9e0d3b0ec5e3b78a82d4b42f92","_from":".","_npmVersion":"2.4.1","_nodeVersion":"0.10.36","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"7de884a8161e3e9e0d3b0ec5e3b78a82d4b42f92","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-1.5.0.tgz"},"directories":{}},"1.6.0":{"name":"fraction.js","title":"fraction.js","version":"1.6.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"dea70736e8149d8c85a40cb227116732fa30b420","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"_id":"fraction.js@1.6.0","_shasum":"b9e56dfd9562dfcbbe05a862fb9bd1400d9c5488","_from":".","_npmVersion":"2.5.0","_nodeVersion":"0.12.0","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"b9e56dfd9562dfcbbe05a862fb9bd1400d9c5488","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-1.6.0.tgz"},"directories":{}},"1.7.0":{"name":"fraction.js","title":"fraction.js","version":"1.7.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"b904864daf9ecad4c17f2a56cff663553bc4258b","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"_id":"fraction.js@1.7.0","_shasum":"8e95345c3a64e1d8cb960c7fb738c7449ea7b4d6","_from":".","_npmVersion":"2.7.3","_nodeVersion":"0.12.0","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"8e95345c3a64e1d8cb960c7fb738c7449ea7b4d6","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-1.7.0.tgz"},"directories":{}},"1.9.0":{"name":"fraction.js","title":"fraction.js","version":"1.9.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"ab709646762b81a6bc6660ad1f894cfa2c201ae4","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"_id":"fraction.js@1.9.0","_shasum":"34463f6f7bc1ddcec3e05e2d4977d24612932170","_from":".","_npmVersion":"2.10.0","_nodeVersion":"0.12.2","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"34463f6f7bc1ddcec3e05e2d4977d24612932170","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-1.9.0.tgz"},"directories":{}},"2.0.0":{"name":"fraction.js","title":"fraction.js","version":"2.0.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"fd457a8ce0a243e5178fc07d7c8dc058580088ec","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"_id":"fraction.js@2.0.0","_shasum":"c7508c03c5f4f03971c94d7f57626b07d503d1c8","_from":".","_npmVersion":"2.10.1","_nodeVersion":"0.12.2","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"c7508c03c5f4f03971c94d7f57626b07d503d1c8","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-2.0.0.tgz"},"directories":{}},"2.2.0":{"name":"fraction.js","title":"fraction.js","version":"2.2.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"722cd19c14c0dc57bdce424d3950f369d421cf6a","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"_id":"fraction.js@2.2.0","_shasum":"a91933797ac159353bf27145c37d57f3c44f3d97","_from":".","_npmVersion":"2.11.0","_nodeVersion":"0.12.4","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"a91933797ac159353bf27145c37d57f3c44f3d97","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-2.2.0.tgz"},"directories":{}},"2.3.0":{"name":"fraction.js","title":"fraction.js","version":"2.3.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"fa2bf9f3dcc3b1491f368383b0e0673ec773c0b3","_id":"fraction.js@2.3.0","_shasum":"937b0a962da28da3bb0e95ea8776e6c56b702165","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.4","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"937b0a962da28da3bb0e95ea8776e6c56b702165","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-2.3.0.tgz"},"directories":{}},"2.4.0":{"name":"fraction.js","title":"fraction.js","version":"2.4.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"df1b3df133055d62d2de474779db3b8e797838d0","_id":"fraction.js@2.4.0","_shasum":"39d2c2c9b91d0ae2888e7d81e5d1607d561707f2","_from":".","_npmVersion":"2.12.0","_nodeVersion":"0.12.5","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"39d2c2c9b91d0ae2888e7d81e5d1607d561707f2","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-2.4.0.tgz"},"directories":{}},"2.4.1":{"name":"fraction.js","title":"fraction.js","version":"2.4.1","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"f0640781b4bf68b28505516d3bb562fead77b66b","_id":"fraction.js@2.4.1","_shasum":"277e70045754a5e87557cc49e9c9d370f01e8a2f","_from":".","_npmVersion":"2.12.1","_nodeVersion":"0.12.6","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"277e70045754a5e87557cc49e9c9d370f01e8a2f","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-2.4.1.tgz"},"directories":{}},"2.5.0":{"name":"fraction.js","title":"fraction.js","version":"2.5.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"e38a320aa2f3a6390ecc93c9b9478c68fd73f9e4","_id":"fraction.js@2.5.0","_shasum":"abca045c6ede85edf20a47ba3a5bfa525d18513d","_from":".","_npmVersion":"2.13.2","_nodeVersion":"0.12.7","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"abca045c6ede85edf20a47ba3a5bfa525d18513d","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-2.5.0.tgz"},"directories":{}},"2.6.0":{"name":"fraction.js","title":"fraction.js","version":"2.6.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number","parser"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"0971ea2c3f2f3d71b604d615d1ec5a1e3cd03e20","_id":"fraction.js@2.6.0","_shasum":"bdfa365253d90413df629b853c423324a8195d52","_from":".","_npmVersion":"2.13.5","_nodeVersion":"0.12.7","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"bdfa365253d90413df629b853c423324a8195d52","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-2.6.0.tgz"},"directories":{}},"2.7.0":{"name":"fraction.js","title":"fraction.js","version":"2.7.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number","parser"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"58f2241a306e546979dbd52d3dcbba4a8e6f9b12","_id":"fraction.js@2.7.0","_shasum":"22e38b7a9408a6a19c0604f1da507a72cb3fd093","_from":".","_npmVersion":"2.13.5","_nodeVersion":"0.12.7","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"22e38b7a9408a6a19c0604f1da507a72cb3fd093","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-2.7.0.tgz"},"directories":{}},"2.8.0":{"name":"fraction.js","title":"fraction.js","version":"2.8.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number","parser","rational numbers"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"2e6adc95ca73e29d04b778ceb858c9a923a67b9f","_id":"fraction.js@2.8.0","_shasum":"7644fb904b0217747aed0cc103ef1cbee564ece4","_from":".","_npmVersion":"2.14.1","_nodeVersion":"0.12.7","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"7644fb904b0217747aed0cc103ef1cbee564ece4","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-2.8.0.tgz"},"directories":{}},"2.9.0":{"name":"fraction.js","title":"fraction.js","version":"2.9.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number","parser","rational numbers"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"722b2764d06e0af5d5d357d045e2a1a5e6f95355","_id":"fraction.js@2.9.0","_shasum":"dc0b487cb5f5ef89abe8ec874107f2898fbf9b2a","_from":".","_npmVersion":"2.14.2","_nodeVersion":"0.12.7","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"dc0b487cb5f5ef89abe8ec874107f2898fbf9b2a","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-2.9.0.tgz"},"directories":{}},"3.0.0":{"name":"fraction.js","title":"fraction.js","version":"3.0.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number","parser","rational numbers"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"5b595ea57e1d0de0d45872db965089d249e045c4","_id":"fraction.js@3.0.0","_shasum":"4e8c1c5167c607c623e759cc23a60abf48941080","_from":".","_npmVersion":"2.14.2","_nodeVersion":"0.12.7","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"4e8c1c5167c607c623e759cc23a60abf48941080","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-3.0.0.tgz"},"directories":{}},"3.1.0":{"name":"fraction.js","title":"fraction.js","version":"3.1.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number","parser","rational numbers"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","directories":{"example":"examples"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"f0c236b7e4fd0bbc33078a0b7ea01396480fd20f","_id":"fraction.js@3.1.0","_shasum":"34bc3e6dfda754405d468e48b1f70de761b01989","_from":".","_npmVersion":"3.5.3","_nodeVersion":"5.4.1","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"34bc3e6dfda754405d468e48b1f70de761b01989","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-3.1.0.tgz"}},"3.2.0":{"name":"fraction.js","title":"fraction.js","version":"3.2.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number","parser","rational numbers"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","directories":{"example":"examples"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"},{"type":"GPL","url":"http://www.opensource.org/licenses/GPL-2.0"}],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"5829a13e9bd27f84837583578af4ea5374177eb9","_id":"fraction.js@3.2.0","_shasum":"597b76b9dd835291ed0170c86c4763fd683439c2","_from":".","_npmVersion":"3.5.3","_nodeVersion":"5.4.1","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"597b76b9dd835291ed0170c86c4763fd683439c2","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-3.2.0.tgz"}},"3.2.5":{"name":"fraction.js","title":"fraction.js","version":"3.2.5","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","number","parser","rational numbers"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","directories":{"example":"examples"},"license":"MIT OR GPL-2.0","repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"654e6e72d2522dd420b28fe51b28c06dcd540975","_id":"fraction.js@3.2.5","_shasum":"502efada3f737824f16ad1c1a41f23ee51fd781e","_from":".","_npmVersion":"3.7.1","_nodeVersion":"5.5.0","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"502efada3f737824f16ad1c1a41f23ee51fd781e","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-3.2.5.tgz"},"_npmOperationalInternal":{"host":"packages-9-west.internal.npmjs.com","tmp":"tmp/fraction.js-3.2.5.tgz_1454761750288_0.37279163231141865"}},"3.3.0":{"name":"fraction.js","title":"fraction.js","version":"3.3.0","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","rationals","number","parser","rational numbers"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","directories":{"example":"examples"},"license":"MIT OR GPL-2.0","repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"918c340fc7aceeee81328fa01810c590ab063fd1","_id":"fraction.js@3.3.0","_shasum":"700a6a0ca73ac4ccca1f88e21eb374a275167e3d","_from":".","_npmVersion":"3.8.2","_nodeVersion":"5.9.1","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"700a6a0ca73ac4ccca1f88e21eb374a275167e3d","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-3.3.0.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/fraction.js-3.3.0.tgz_1458860009202_0.12263908958993852"}},"3.3.1":{"name":"fraction.js","title":"fraction.js","version":"3.3.1","homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"description":"A rational number library","keywords":["math","fraction","rational","rationals","number","parser","rational numbers"],"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"main":"fraction","private":false,"directories":{"example":"examples"},"license":"MIT OR GPL-2.0","repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"engines":{"node":"*"},"scripts":{"test":"mocha tests/*.js"},"devDependencies":{"mocha":"*"},"gitHead":"bd7ae34bca5f0dae488253ff9416452c765e3c3d","_id":"fraction.js@3.3.1","_shasum":"5d6a31ff07707294f204ccbb6b53791607771083","_from":".","_npmVersion":"3.8.5","_nodeVersion":"5.10.0","_npmUser":{"name":"infusion","email":"robert@xarg.org"},"maintainers":[{"name":"infusion","email":"robert@xarg.org"}],"dist":{"shasum":"5d6a31ff07707294f204ccbb6b53791607771083","tarball":"https://registry.npmjs.org/fraction.js/-/fraction.js-3.3.1.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/fraction.js-3.3.1.tgz_1460043236976_0.2814995003864169"}}},"homepage":"http://www.xarg.org/2014/03/precise-calculations-in-javascript/","keywords":["math","fraction","rational","rationals","number","parser","rational numbers"],"repository":{"type":"git","url":"git://github.com/infusion/Fraction.js.git"},"author":{"name":"Robert Eisele","email":"robert@xarg.org","url":"http://www.xarg.org/"},"bugs":{"url":"https://github.com/infusion/Fraction.js/issues"},"readmeFilename":"README.md","license":"MIT OR GPL-2.0","_attachments":{},"_etag":"\"5II91ZTA9JRTREVGHXI0GBGFJ\""}